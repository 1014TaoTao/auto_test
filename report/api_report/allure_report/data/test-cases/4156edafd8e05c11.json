{
  "uid" : "4156edafd8e05c11",
  "name" : "test_002-虚拟化-无参数且与依赖测试",
  "fullName" : "testCase.test_excel.TestExcel#test_excel",
  "historyId" : "6c8fa585792269358a5b890f51a0bbe4",
  "time" : {
    "start" : 1670235385814,
    "stop" : 1670235385825,
    "duration" : 11
  },
  "description" : "test_002-虚拟化-无参数且与依赖测试 get http://kubeos.tudoucloud.com/kube/v1/api/kubevirt/machine/detail",
  "descriptionHtml" : "<p>test_002-虚拟化-无参数且与依赖测试 get http://kubeos.tudoucloud.com/kube/v1/api/kubevirt/machine/detail</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail",
  "statusTrace" : "self = <testCase.test_excel.TestExcel object at 0x00000217A61E4F10>\nresult = {'data': {}, 'expected_data': \"displayName': 'ubuntu20'\", 'expected_msg': '成功', 'headers': {'Authorization': 'Bearer 003dd450-7147-4d74-a96c-64f23f7f2e28'}, ...}\n\n    @pytest.mark.parametrize(\"result\", run_setup())\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.epic('excel接口测试')\n    def test_excel(self, result):\n        \"\"\"\n        :param result:\n        :return:\n        \"\"\"\n        allure.dynamic.description(\n            f\"{str(result['title'])} {str(result['method'])} {str(result['url'])}\")\n        allure.dynamic.title(str(result['title']))\n        with allure.step(u\"测试结果：{0}\".format(str(result['result']))):\n            allure.attach(u\"测试结果：{0}\".format(str(result['result'])), \"测试结果\")\n    \n        with allure.step(u\"用例名称：{0}\".format(str(result['title']))):\n            allure.attach(u\"用例名称：{0}\".format(str(result['title'])), \"用例名称\")\n    \n        with allure.step(u\"请求方式：{0}\".format(str(result['method']))):\n            allure.attach(u\"请求方式：{0}\".format(str(result['method'])), \"请求方式\")\n    \n        with allure.step(u\"请求地址：{0}\".format(str(result['url']))):\n            allure.attach(u\"请求地址：{0}\".format(str(result['url'])), \"请求地址\")\n    \n        with allure.step(u\"请求头 ：{0}\".format(str(result['headers']))):\n            allure.attach(u\"请求头 ：{0}\".format(str(result['headers'])), \"请求头\")\n    \n        with allure.step(u\"请求参数：{0}\".format(str(result['data']))):\n            allure.attach(u\"请求参数：{0}\".format(str(result['data'])), \"请求参数\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['status_code']))):\n            allure.attach(u\"请求断言：{0}\".format(\n                str(result['status_code'])), \"code请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_msg']))):\n            allure.attach(u\"请求断言：{0}\".format(\n                str(result['expected_msg'])), \"msg请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_data']))):\n            allure.attach(u\"请求断言：{0}\".format(\n                str(result['expected_data'])), \"data请求断言\")\n    \n        with allure.step(u\"响应结果：{0}\".format(str(result['res']))):\n            allure.attach(u\"响应结果：{0}\".format(str(result['res'])), \"响应结果\")\n    \n        with allure.step(\"断言\"):\n>           assert result[\"result\"] == \"pass\"\nE           AssertionError: assert 'fail' == 'pass'\nE             - pass\nE             + fail\n\ntestCase\\test_excel.py:106: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1670235385429,
      "stop" : 1670235385574,
      "duration" : 145
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "description" : "test_002-虚拟化-无参数且与依赖测试 get http://kubeos.tudoucloud.com/kube/v1/api/kubevirt/machine/detail",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail",
    "statusTrace" : "self = <testCase.test_excel.TestExcel object at 0x00000217A61E4F10>\nresult = {'data': {}, 'expected_data': \"displayName': 'ubuntu20'\", 'expected_msg': '成功', 'headers': {'Authorization': 'Bearer 003dd450-7147-4d74-a96c-64f23f7f2e28'}, ...}\n\n    @pytest.mark.parametrize(\"result\", run_setup())\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.epic('excel接口测试')\n    def test_excel(self, result):\n        \"\"\"\n        :param result:\n        :return:\n        \"\"\"\n        allure.dynamic.description(\n            f\"{str(result['title'])} {str(result['method'])} {str(result['url'])}\")\n        allure.dynamic.title(str(result['title']))\n        with allure.step(u\"测试结果：{0}\".format(str(result['result']))):\n            allure.attach(u\"测试结果：{0}\".format(str(result['result'])), \"测试结果\")\n    \n        with allure.step(u\"用例名称：{0}\".format(str(result['title']))):\n            allure.attach(u\"用例名称：{0}\".format(str(result['title'])), \"用例名称\")\n    \n        with allure.step(u\"请求方式：{0}\".format(str(result['method']))):\n            allure.attach(u\"请求方式：{0}\".format(str(result['method'])), \"请求方式\")\n    \n        with allure.step(u\"请求地址：{0}\".format(str(result['url']))):\n            allure.attach(u\"请求地址：{0}\".format(str(result['url'])), \"请求地址\")\n    \n        with allure.step(u\"请求头 ：{0}\".format(str(result['headers']))):\n            allure.attach(u\"请求头 ：{0}\".format(str(result['headers'])), \"请求头\")\n    \n        with allure.step(u\"请求参数：{0}\".format(str(result['data']))):\n            allure.attach(u\"请求参数：{0}\".format(str(result['data'])), \"请求参数\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['status_code']))):\n            allure.attach(u\"请求断言：{0}\".format(\n                str(result['status_code'])), \"code请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_msg']))):\n            allure.attach(u\"请求断言：{0}\".format(\n                str(result['expected_msg'])), \"msg请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_data']))):\n            allure.attach(u\"请求断言：{0}\".format(\n                str(result['expected_data'])), \"data请求断言\")\n    \n        with allure.step(u\"响应结果：{0}\".format(str(result['res']))):\n            allure.attach(u\"响应结果：{0}\".format(str(result['res'])), \"响应结果\")\n    \n        with allure.step(\"断言\"):\n>           assert result[\"result\"] == \"pass\"\nE           AssertionError: assert 'fail' == 'pass'\nE             - pass\nE             + fail\n\ntestCase\\test_excel.py:106: AssertionError",
    "steps" : [ {
      "name" : "测试结果：fail",
      "time" : {
        "start" : 1670235385814,
        "stop" : 1670235385814,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ca2b571ae302c1ef",
        "name" : "测试结果",
        "source" : "ca2b571ae302c1ef.attach",
        "type" : "text/plain",
        "size" : 19
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "用例名称：test_002-虚拟化-无参数且与依赖测试",
      "time" : {
        "start" : 1670235385815,
        "stop" : 1670235385815,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9994bc19c2b97d41",
        "name" : "用例名称",
        "source" : "9994bc19c2b97d41.attach",
        "type" : "text/plain",
        "size" : 61
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求方式：get",
      "time" : {
        "start" : 1670235385815,
        "stop" : 1670235385817,
        "duration" : 2
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3ecaeb3aa1d0018c",
        "name" : "请求方式",
        "source" : "3ecaeb3aa1d0018c.attach",
        "type" : "text/plain",
        "size" : 18
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求地址：http://kubeos.tudoucloud.com/kube/v1/api/kubevirt/machine/detail",
      "time" : {
        "start" : 1670235385817,
        "stop" : 1670235385817,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e2911a563658c920",
        "name" : "请求地址",
        "source" : "e2911a563658c920.attach",
        "type" : "text/plain",
        "size" : 79
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求头 ：{'Authorization': 'Bearer 003dd450-7147-4d74-a96c-64f23f7f2e28'}",
      "time" : {
        "start" : 1670235385818,
        "stop" : 1670235385819,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c765fbcdf02f5058",
        "name" : "请求头",
        "source" : "c765fbcdf02f5058.attach",
        "type" : "text/plain",
        "size" : 77
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求参数：{}",
      "time" : {
        "start" : 1670235385819,
        "stop" : 1670235385820,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "f04ad9baf55b76c9",
        "name" : "请求参数",
        "source" : "f04ad9baf55b76c9.attach",
        "type" : "text/plain",
        "size" : 17
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求断言：200.0",
      "time" : {
        "start" : 1670235385820,
        "stop" : 1670235385821,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3fe9ad060ce74a39",
        "name" : "code请求断言",
        "source" : "3fe9ad060ce74a39.attach",
        "type" : "text/plain",
        "size" : 20
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求断言：成功",
      "time" : {
        "start" : 1670235385821,
        "stop" : 1670235385822,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "3515084181ab9ab4",
        "name" : "msg请求断言",
        "source" : "3515084181ab9ab4.attach",
        "type" : "text/plain",
        "size" : 21
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "请求断言：displayName': 'ubuntu20'",
      "time" : {
        "start" : 1670235385822,
        "stop" : 1670235385823,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "371560d4ff0976df",
        "name" : "data请求断言",
        "source" : "371560d4ff0976df.attach",
        "type" : "text/plain",
        "size" : 39
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "响应结果：{'code': 200, 'body': {'code': 0, 'msg': 'name为空', 'data': None}, 'time_consuming': 44.132, 'time_total': 0.044132}",
      "time" : {
        "start" : 1670235385823,
        "stop" : 1670235385824,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "49451243a4ca8233",
        "name" : "响应结果",
        "source" : "49451243a4ca8233.attach",
        "type" : "text/plain",
        "size" : 134
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1
    }, {
      "name" : "断言",
      "time" : {
        "start" : 1670235385824,
        "stop" : 1670235385825,
        "duration" : 1
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail\n",
      "statusTrace" : "  File \"e:\\my_project\\pytest_auto_uitest_apitest\\testCase\\test_excel.py\", line 106, in test_excel\n    assert result[\"result\"] == \"pass\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 11,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 10
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "epic",
    "value" : "excel接口测试"
  }, {
    "name" : "story",
    "value" : "story二级标签:excel接口测试"
  }, {
    "name" : "feature",
    "value" : "feature一级标签:excel接口测试"
  }, {
    "name" : "parentSuite",
    "value" : "testCase"
  }, {
    "name" : "suite",
    "value" : "test_excel"
  }, {
    "name" : "subSuite",
    "value" : "TestExcel"
  }, {
    "name" : "host",
    "value" : "ZhangTao"
  }, {
    "name" : "thread",
    "value" : "23516-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.test_excel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "result",
    "value" : "{'result': 'fail', 'title': 'test_002-虚拟化-无参数且与依赖测试', 'url': 'http://kubeos.tudoucloud.com/kube/v1/api/kubevirt/machine/detail', 'method': 'get', 'headers': {'Authorization': 'Bearer 003dd450-7147-4d74-a96c-64f23f7f2e28'}, 'data': {}, 'status_code': 200.0, 'expected_msg': '成功', 'expected_data': \"displayName': 'ubuntu20'\", 'res': {'code': 200, 'body': {'code': 0, 'msg': 'name为空', 'data': None}, 'time_consuming': 44.132, 'time_total': 0.044132}}"
  } ],
  "links" : [ {
    "name" : "allure.testcase：测试用例地址",
    "url" : "https://njqa.zgyjyx.net/api",
    "type" : "test_case"
  }, {
    "name" : "allure.issue：BUG地址",
    "url" : "https://njqa.zgyjyx.net/api",
    "type" : "issue"
  }, {
    "name" : "allure.link：超链接",
    "url" : "https://njqa.zgyjyx.net/api",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 2,
        "broken" : 0,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "9e33888f479e9e2d",
        "reportUrl" : "http://10.1.5.26:9091/job/pytest_auto_uitest_apitest/allure//#testresult/9e33888f479e9e2d",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail",
        "time" : {
          "start" : 1670235385814,
          "stop" : 1670235385825,
          "duration" : 11
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "4156edafd8e05c11.json",
  "parameterValues" : [ "{'result': 'fail', 'title': 'test_002-虚拟化-无参数且与依赖测试', 'url': 'http://kubeos.tudoucloud.com/kube/v1/api/kubevirt/machine/detail', 'method': 'get', 'headers': {'Authorization': 'Bearer 003dd450-7147-4d74-a96c-64f23f7f2e28'}, 'data': {}, 'status_code': 200.0, 'expected_msg': '成功', 'expected_data': \"displayName': 'ubuntu20'\", 'res': {'code': 200, 'body': {'code': 0, 'msg': 'name为空', 'data': None}, 'time_consuming': 44.132, 'time_total': 0.044132}}" ]
}