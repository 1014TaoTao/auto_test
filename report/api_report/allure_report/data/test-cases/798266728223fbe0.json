{
  "uid" : "798266728223fbe0",
  "name" : "test_006镜像资源-我的仓库（已存在）",
  "fullName" : "testCase.api.test_excel.TestExcel#test_excel",
  "historyId" : "dbc73698580485f08e6d049538936a76",
  "time" : {
    "start" : 1654141617897,
    "stop" : 1654141617908,
    "duration" : 11
  },
  "description" : "test_006镜像资源-我的仓库（已存在） post http://192.168.0.115:10007/kuberegistry/v1/api/repository",
  "descriptionHtml" : "<p>test_006镜像资源-我的仓库（已存在） post http://192.168.0.115:10007/kuberegistry/v1/api/repository</p>\n",
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail",
  "statusTrace" : "self = <testCase.api.test_excel.TestExcel object at 0x000001395B35CA60>\nresult = {'data': {'description': '张涛测试', 'groupId': 495, 'imageName': 'zhangtao_test_001', 'tagSet': ['分析工具'], ...}, 'expected_data': '', 'expected_msg': '成功', 'headers': {'Authorization': 'Bearer bd0c3a7f-5de6-416c-8f48-ccf7700c9d2c'}, ...}\n\n    @pytest.mark.parametrize(\"result\", run_setup())\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.epic('excel接口测试')\n    def test_excel(self, result):\n        \"\"\"\n        :param result:\n        :return:\n        \"\"\"\n        allure.dynamic.description(f\"{str(result['title'])} {str(result['method'])} {str(result['url'])}\")\n        allure.dynamic.title(str(result['title']))\n        with allure.step(u\"测试结果：{0}\".format(str(result['result']))):\n            allure.attach(u\"测试结果：{0}\".format(str(result['result'])), \"测试结果\")\n    \n        with allure.step(u\"用例名称：{0}\".format(str(result['title']))):\n            allure.attach(u\"用例名称：{0}\".format(str(result['title'])), \"用例名称\")\n    \n        with allure.step(u\"请求方式：{0}\".format(str(result['method']))):\n            allure.attach(u\"请求方式：{0}\".format(str(result['method'])), \"请求方式\")\n    \n        with allure.step(u\"请求地址：{0}\".format(str(result['url']))):\n            allure.attach(u\"请求地址：{0}\".format(str(result['url'])), \"请求地址\")\n    \n        with allure.step(u\"请求头 ：{0}\".format(str(result['headers']))):\n            allure.attach(u\"请求头 ：{0}\".format(str(result['headers'])), \"请求头\")\n    \n        with allure.step(u\"请求参数：{0}\".format(str(result['data']))):\n            allure.attach(u\"请求参数：{0}\".format(str(result['data'])), \"请求参数\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['status_code']))):\n            allure.attach(u\"请求断言：{0}\".format(str(result['status_code'])), \"code请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_msg']))):\n            allure.attach(u\"请求断言：{0}\".format(str(result['expected_msg'])), \"msg请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_data']))):\n            allure.attach(u\"请求断言：{0}\".format(str(result['expected_data'])), \"data请求断言\")\n    \n        with allure.step(u\"响应结果：{0}\".format(str(result['res']))):\n            allure.attach(u\"响应结果：{0}\".format(str(result['res'])), \"响应结果\")\n    \n        with allure.step(\"断言\"):\n>           assert result[\"result\"] == \"pass\"\nE           AssertionError: assert 'fail' == 'pass'\nE             - pass\nE             + fail\n\ntestCase\\api\\test_excel.py:86: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1654141617203,
      "stop" : 1654141617438,
      "duration" : 235
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "test_006镜像资源-我的仓库（已存在） post http://192.168.0.115:10007/kuberegistry/v1/api/repository",
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail",
    "statusTrace" : "self = <testCase.api.test_excel.TestExcel object at 0x000001395B35CA60>\nresult = {'data': {'description': '张涛测试', 'groupId': 495, 'imageName': 'zhangtao_test_001', 'tagSet': ['分析工具'], ...}, 'expected_data': '', 'expected_msg': '成功', 'headers': {'Authorization': 'Bearer bd0c3a7f-5de6-416c-8f48-ccf7700c9d2c'}, ...}\n\n    @pytest.mark.parametrize(\"result\", run_setup())\n    @allure.severity(allure.severity_level.BLOCKER)\n    @allure.epic('excel接口测试')\n    def test_excel(self, result):\n        \"\"\"\n        :param result:\n        :return:\n        \"\"\"\n        allure.dynamic.description(f\"{str(result['title'])} {str(result['method'])} {str(result['url'])}\")\n        allure.dynamic.title(str(result['title']))\n        with allure.step(u\"测试结果：{0}\".format(str(result['result']))):\n            allure.attach(u\"测试结果：{0}\".format(str(result['result'])), \"测试结果\")\n    \n        with allure.step(u\"用例名称：{0}\".format(str(result['title']))):\n            allure.attach(u\"用例名称：{0}\".format(str(result['title'])), \"用例名称\")\n    \n        with allure.step(u\"请求方式：{0}\".format(str(result['method']))):\n            allure.attach(u\"请求方式：{0}\".format(str(result['method'])), \"请求方式\")\n    \n        with allure.step(u\"请求地址：{0}\".format(str(result['url']))):\n            allure.attach(u\"请求地址：{0}\".format(str(result['url'])), \"请求地址\")\n    \n        with allure.step(u\"请求头 ：{0}\".format(str(result['headers']))):\n            allure.attach(u\"请求头 ：{0}\".format(str(result['headers'])), \"请求头\")\n    \n        with allure.step(u\"请求参数：{0}\".format(str(result['data']))):\n            allure.attach(u\"请求参数：{0}\".format(str(result['data'])), \"请求参数\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['status_code']))):\n            allure.attach(u\"请求断言：{0}\".format(str(result['status_code'])), \"code请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_msg']))):\n            allure.attach(u\"请求断言：{0}\".format(str(result['expected_msg'])), \"msg请求断言\")\n    \n        with allure.step(u\"请求断言：{0}\".format(str(result['expected_data']))):\n            allure.attach(u\"请求断言：{0}\".format(str(result['expected_data'])), \"data请求断言\")\n    \n        with allure.step(u\"响应结果：{0}\".format(str(result['res']))):\n            allure.attach(u\"响应结果：{0}\".format(str(result['res'])), \"响应结果\")\n    \n        with allure.step(\"断言\"):\n>           assert result[\"result\"] == \"pass\"\nE           AssertionError: assert 'fail' == 'pass'\nE             - pass\nE             + fail\n\ntestCase\\api\\test_excel.py:86: AssertionError",
    "steps" : [ {
      "name" : "测试结果：fail",
      "time" : {
        "start" : 1654141617897,
        "stop" : 1654141617908,
        "duration" : 11
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "62affe2332dffc6d",
        "name" : "测试结果",
        "source" : "62affe2332dffc6d.attach",
        "type" : "text/plain",
        "size" : 19
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "用例名称：test_006镜像资源-我的仓库（已存在）",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ede2453acd2028ff",
        "name" : "用例名称",
        "source" : "ede2453acd2028ff.attach",
        "type" : "text/plain",
        "size" : 63
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求方式：post",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "e6d68c1f2b4aed88",
        "name" : "请求方式",
        "source" : "e6d68c1f2b4aed88.attach",
        "type" : "text/plain",
        "size" : 19
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求地址：http://192.168.0.115:10007/kuberegistry/v1/api/repository",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "66eca427d63f7622",
        "name" : "请求地址",
        "source" : "66eca427d63f7622.attach",
        "type" : "text/plain",
        "size" : 72
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求头 ：{'Authorization': 'Bearer bd0c3a7f-5de6-416c-8f48-ccf7700c9d2c'}",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "b79256311e85e146",
        "name" : "请求头",
        "source" : "b79256311e85e146.attach",
        "type" : "text/plain",
        "size" : 77
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求参数：{'tagSet': ['分析工具'], 'imageName': 'zhangtao_test_001', 'groupId': 495, 'tenantId': 1, 'description': '张涛测试'}",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "ccb87cce91e18448",
        "name" : "请求参数",
        "source" : "ccb87cce91e18448.attach",
        "type" : "text/plain",
        "size" : 139
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求断言：201.0",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "df2cd97a8bb339a9",
        "name" : "code请求断言",
        "source" : "df2cd97a8bb339a9.attach",
        "type" : "text/plain",
        "size" : 20
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求断言：成功",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "c5d76a9041ea49dd",
        "name" : "msg请求断言",
        "source" : "c5d76a9041ea49dd.attach",
        "type" : "text/plain",
        "size" : 21
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "请求断言：",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "5a1f36ff9a471613",
        "name" : "data请求断言",
        "source" : "5a1f36ff9a471613.attach",
        "type" : "text/plain",
        "size" : 15
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "响应结果：{'code': 200, 'body': {'code': 13101, 'msg': '仓库名已存在', 'data': None, 'ext': {}}, 'time_consuming': 136.969, 'time_total': 0.136969}",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "9f009a32ec22da85",
        "name" : "响应结果",
        "source" : "9f009a32ec22da85.attach",
        "type" : "text/plain",
        "size" : 158
      } ],
      "parameters" : [ ],
      "shouldDisplayMessage" : false,
      "attachmentsCount" : 1,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "断言",
      "time" : {
        "start" : 1654141617908,
        "stop" : 1654141617908,
        "duration" : 0
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 'fail' == 'pass'\n  - pass\n  + fail\n",
      "statusTrace" : "  File \"E:\\pytest_auto_uitest_apitest\\testCase\\api\\test_excel.py\", line 86, in test_excel\n    assert result[\"result\"] == \"pass\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "shouldDisplayMessage" : true,
      "attachmentsCount" : 0,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 10,
    "stepsCount" : 11,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "feature一级标签:excel接口测试"
  }, {
    "name" : "epic",
    "value" : "excel接口测试"
  }, {
    "name" : "story",
    "value" : "story二级标签:excel接口测试"
  }, {
    "name" : "severity",
    "value" : "blocker"
  }, {
    "name" : "parentSuite",
    "value" : "testCase.api"
  }, {
    "name" : "suite",
    "value" : "test_excel"
  }, {
    "name" : "subSuite",
    "value" : "TestExcel"
  }, {
    "name" : "host",
    "value" : "ZhangTao"
  }, {
    "name" : "thread",
    "value" : "2984-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testCase.api.test_excel"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "result",
    "value" : "{'result': 'fail', 'title': 'test_006镜像资源-我的仓库（已存在）', 'url': 'http://192.168.0.115:10007/kuberegistry/v1/api/repository', 'method': 'post', 'headers': {'Authorization': 'Bearer bd0c3a7f-5de6-416c-8f48-ccf7700c9d2c'}, 'data': {'tagSet': ['分析工具'], 'imageName': 'zhangtao_test_001', 'groupId': 495, 'tenantId': 1, 'description': '张涛测试'}, 'status_code': 201.0, 'expected_msg': '成功', 'expected_data': '', 'res': {'code': 200, 'body': {'code': 13101, 'msg': '仓库名已存在', 'data': None, 'ext': {}}, 'time_consuming': 136.969, 'time_total': 0.136969}}"
  } ],
  "links" : [ {
    "name" : "allure.testcase：测试用例地址",
    "url" : "https://njqa.zgyjyx.net/api",
    "type" : "test_case"
  }, {
    "name" : "allure.issue：BUG地址",
    "url" : "https://njqa.zgyjyx.net/api",
    "type" : "issue"
  }, {
    "name" : "allure.link：超链接",
    "url" : "https://njqa.zgyjyx.net/api",
    "type" : "link"
  } ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "blocker",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "798266728223fbe0.json",
  "parameterValues" : [ "{'result': 'fail', 'title': 'test_006镜像资源-我的仓库（已存在）', 'url': 'http://192.168.0.115:10007/kuberegistry/v1/api/repository', 'method': 'post', 'headers': {'Authorization': 'Bearer bd0c3a7f-5de6-416c-8f48-ccf7700c9d2c'}, 'data': {'tagSet': ['分析工具'], 'imageName': 'zhangtao_test_001', 'groupId': 495, 'tenantId': 1, 'description': '张涛测试'}, 'status_code': 201.0, 'expected_msg': '成功', 'expected_data': '', 'res': {'code': 200, 'body': {'code': 13101, 'msg': '仓库名已存在', 'data': None, 'ext': {}}, 'time_consuming': 136.969, 'time_total': 0.136969}}" ]
}